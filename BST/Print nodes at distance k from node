/**********************************************************

        Following is the Binary Tree Node class structure

        template <typename T>
        class BinaryTreeNode {
        public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
                this -> data = data;
                left = NULL;
                right = NULL;
        }
        };

***********************************************************/
void printnodesatdepth(BinaryTreeNode<int>* root,int depth){
    if(root==NULL){
        return;
    }
    if(depth==0){
        cout<<root->data<<endl;
        return;
    }
    printnodesatdepth(root->left,depth-1);
    printnodesatdepth(root->right,depth-1);
}
int print(BinaryTreeNode<int>* root,int k,int element){
    if(root==NULL){
        return -1;
    }
    if(root->data==element){
        printnodesatdepth(root,k);
        return 0;
    }
    int ld=print(root->left,k,element);
    if(ld!=-1){
        if(ld+1==k){
        cout<<root->data<<" ";
        return ld+1;
        }
        else{
        printnodesatdepth(root->right,k-ld-2);
        return ld+1;
    }
}
    else{
        int rd=print(root->right,k,element);
        if(rd==-1){
            return -1;
        }
        else if(rd+1==k){
            cout<<root->data<<endl;
            return rd+1;
        }
        else{
            printnodesatdepth(root->left,k-rd-2);
            return rd+1;
        }
    }
}
void nodesAtDistanceK(BinaryTreeNode<int> *root, int node, int k) {
    if(root==NULL){
        return;
    }
    int ans=print(root,k,node);
}
