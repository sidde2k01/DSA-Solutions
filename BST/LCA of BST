/**********************************************************

	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public: 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this->data = data;
        	left = NULL;
        	right = NULL;
    	}
	};

***********************************************************/

int getLCA(BinaryTreeNode<int>* root , int val1 , int val2){
    if(root==NULL){
        return -1;
    }
    if(root->data==val1||root->data==val2){
        return root->data;
    }
    if(val1<root->data&&val2<root->data){
        int leftans=getLCA(root->left,val1,val2);
        if(leftans!=-1){
            return leftans;
        }
        return leftans;
    }
    else if(val1>root->data&&val2>root->data){
        int rightans=getLCA(root->right,val1,val2);
        if(rightans!=-1){
            return rightans;
        }
        return rightans;
    }
    else{
        int leftans=getLCA(root->left,val1,val2);
        int rightans=getLCA(root->right,val1,val2);
        if(leftans!=-1&&rightans==-1){
            return leftans;
        }
        else if(leftans==-1&&rightans!=-1){
            return rightans;
        }
        else if(leftans==-1&&rightans==-1){
            return -1;
        }
        else{
            return root->data;
        }
    }
}
