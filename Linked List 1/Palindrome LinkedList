/****************************************************************
 
    Following is the class structure of the Node class:

        class Node
        {
        public:
	        int data;
	        Node *next;
	        Node(int data)
	        {
		        this->data = data;
		        this->next = NULL;
	        }
        };

*****************************************************************/
Node* midpoint(Node* head){
    if(head==NULL||head->next==NULL){
        return head;
    }
    Node* slow=head;
    Node* fast=head->next;
    while(fast!=NULL&&fast->next!=NULL){
        slow=slow->next;
        fast=fast->next->next;
    }
    return slow;
}
Node* reverseLL(Node* head){
    if(head==NULL||head->next==NULL){
        return head;
    }
    Node* prevptr=NULL;
    Node* currentptr=head;
    while(currentptr!=NULL){
        Node* nextptr=currentptr->next;
        currentptr->next=prevptr;
        prevptr=currentptr;
        currentptr=nextptr;
    }
    return prevptr;
}
bool isPalindrome(Node *head){
    if(head==NULL||head->next==NULL){
        return true;
    }
    Node* mid=midpoint(head);
    Node* head2=mid->next;
    mid->next=NULL;
    head2=reverseLL(head2);
    Node* temp=head;
    while(temp!=NULL&&head2!=NULL){
        if(temp->data!=head2->data){
            return false;
        }
        temp=temp->next;
        head2=head2->next;
    }
    return true;
}
