/***********************************************************
	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public : 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this -> data = data;
        	left = NULL;
        	right = NULL;
    	}
	};

***********************************************************/
BinaryTreeNode<int>* helper(int *preorder,int *inorder,int inS,int inE,int preS,int preE){
    if(inS>inE||preS>preE){
        return NULL;
    }
    int rootdata=preorder[preS];
    int rootindex=0;
    for(int i=inS;i<=inE;i++){
        if(inorder[i]==rootdata){
            rootindex=i;
            break;
        }
    }
    BinaryTreeNode<int>* root=new BinaryTreeNode<int>(rootdata);
    int linS=inS;
    int linE=rootindex-1;
    int lpreS=preS+1;
    int lpreE=linE-linS+lpreS;
    int rinS=rootindex+1;
    int rinE=inE;
    int rpreS=lpreE+1;
    int rpreE=preE;
    root->left=helper(preorder,inorder,linS,linE,lpreS,lpreE);
    root->right=helper(preorder,inorder,rinS,rinE,rpreS,rpreE);
    return root;
}
BinaryTreeNode<int>* buildTree(int *preorder, int preLength, int *inorder, int inLength) {
    return helper(preorder,inorder,0,inLength-1,0,preLength-1);
}
